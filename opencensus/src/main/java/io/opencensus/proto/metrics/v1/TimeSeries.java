// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: opencensus/proto/metrics/v1/metrics.proto

package io.opencensus.proto.metrics.v1;

/**
 * <pre>
 * A collection of data points that describes the time-varying values
 * of a metric.
 * </pre>
 *
 * Protobuf type {@code opencensus.proto.metrics.v1.TimeSeries}
 */
public  final class TimeSeries extends
    com.google.protobuf.GeneratedMessageLite<
        TimeSeries, TimeSeries.Builder> implements
    // @@protoc_insertion_point(message_implements:opencensus.proto.metrics.v1.TimeSeries)
    TimeSeriesOrBuilder {
  private TimeSeries() {
    labelValues_ = emptyProtobufList();
    points_ = emptyProtobufList();
  }
  public static final int START_TIMESTAMP_FIELD_NUMBER = 1;
  private com.google.protobuf.Timestamp startTimestamp_;
  /**
   * <pre>
   * Must be present for cumulative metrics. The time when the cumulative value
   * was reset to zero. Exclusive. The cumulative value is over the time interval
   * (start_timestamp, timestamp]. If not specified, the backend can use the
   * previous recorded value.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp start_timestamp = 1;</code>
   */
  @java.lang.Override
  public boolean hasStartTimestamp() {
    return startTimestamp_ != null;
  }
  /**
   * <pre>
   * Must be present for cumulative metrics. The time when the cumulative value
   * was reset to zero. Exclusive. The cumulative value is over the time interval
   * (start_timestamp, timestamp]. If not specified, the backend can use the
   * previous recorded value.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp start_timestamp = 1;</code>
   */
  @java.lang.Override
  public com.google.protobuf.Timestamp getStartTimestamp() {
    return startTimestamp_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : startTimestamp_;
  }
  /**
   * <pre>
   * Must be present for cumulative metrics. The time when the cumulative value
   * was reset to zero. Exclusive. The cumulative value is over the time interval
   * (start_timestamp, timestamp]. If not specified, the backend can use the
   * previous recorded value.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp start_timestamp = 1;</code>
   */
  private void setStartTimestamp(com.google.protobuf.Timestamp value) {
    value.getClass();
  startTimestamp_ = value;
    
    }
  /**
   * <pre>
   * Must be present for cumulative metrics. The time when the cumulative value
   * was reset to zero. Exclusive. The cumulative value is over the time interval
   * (start_timestamp, timestamp]. If not specified, the backend can use the
   * previous recorded value.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp start_timestamp = 1;</code>
   */
  @java.lang.SuppressWarnings({"ReferenceEquality"})
  private void mergeStartTimestamp(com.google.protobuf.Timestamp value) {
    value.getClass();
  if (startTimestamp_ != null &&
        startTimestamp_ != com.google.protobuf.Timestamp.getDefaultInstance()) {
      startTimestamp_ =
        com.google.protobuf.Timestamp.newBuilder(startTimestamp_).mergeFrom(value).buildPartial();
    } else {
      startTimestamp_ = value;
    }
    
  }
  /**
   * <pre>
   * Must be present for cumulative metrics. The time when the cumulative value
   * was reset to zero. Exclusive. The cumulative value is over the time interval
   * (start_timestamp, timestamp]. If not specified, the backend can use the
   * previous recorded value.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp start_timestamp = 1;</code>
   */
  private void clearStartTimestamp() {  startTimestamp_ = null;
    
  }

  public static final int LABEL_VALUES_FIELD_NUMBER = 2;
  private com.google.protobuf.Internal.ProtobufList<io.opencensus.proto.metrics.v1.LabelValue> labelValues_;
  /**
   * <pre>
   * The set of label values that uniquely identify this timeseries. Applies to
   * all points. The order of label values must match that of label keys in the
   * metric descriptor.
   * </pre>
   *
   * <code>repeated .opencensus.proto.metrics.v1.LabelValue label_values = 2;</code>
   */
  @java.lang.Override
  public java.util.List<io.opencensus.proto.metrics.v1.LabelValue> getLabelValuesList() {
    return labelValues_;
  }
  /**
   * <pre>
   * The set of label values that uniquely identify this timeseries. Applies to
   * all points. The order of label values must match that of label keys in the
   * metric descriptor.
   * </pre>
   *
   * <code>repeated .opencensus.proto.metrics.v1.LabelValue label_values = 2;</code>
   */
  public java.util.List<? extends io.opencensus.proto.metrics.v1.LabelValueOrBuilder> 
      getLabelValuesOrBuilderList() {
    return labelValues_;
  }
  /**
   * <pre>
   * The set of label values that uniquely identify this timeseries. Applies to
   * all points. The order of label values must match that of label keys in the
   * metric descriptor.
   * </pre>
   *
   * <code>repeated .opencensus.proto.metrics.v1.LabelValue label_values = 2;</code>
   */
  @java.lang.Override
  public int getLabelValuesCount() {
    return labelValues_.size();
  }
  /**
   * <pre>
   * The set of label values that uniquely identify this timeseries. Applies to
   * all points. The order of label values must match that of label keys in the
   * metric descriptor.
   * </pre>
   *
   * <code>repeated .opencensus.proto.metrics.v1.LabelValue label_values = 2;</code>
   */
  @java.lang.Override
  public io.opencensus.proto.metrics.v1.LabelValue getLabelValues(int index) {
    return labelValues_.get(index);
  }
  /**
   * <pre>
   * The set of label values that uniquely identify this timeseries. Applies to
   * all points. The order of label values must match that of label keys in the
   * metric descriptor.
   * </pre>
   *
   * <code>repeated .opencensus.proto.metrics.v1.LabelValue label_values = 2;</code>
   */
  public io.opencensus.proto.metrics.v1.LabelValueOrBuilder getLabelValuesOrBuilder(
      int index) {
    return labelValues_.get(index);
  }
  private void ensureLabelValuesIsMutable() {
    com.google.protobuf.Internal.ProtobufList<io.opencensus.proto.metrics.v1.LabelValue> tmp = labelValues_;
    if (!tmp.isModifiable()) {
      labelValues_ =
          com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
     }
  }

  /**
   * <pre>
   * The set of label values that uniquely identify this timeseries. Applies to
   * all points. The order of label values must match that of label keys in the
   * metric descriptor.
   * </pre>
   *
   * <code>repeated .opencensus.proto.metrics.v1.LabelValue label_values = 2;</code>
   */
  private void setLabelValues(
      int index, io.opencensus.proto.metrics.v1.LabelValue value) {
    value.getClass();
  ensureLabelValuesIsMutable();
    labelValues_.set(index, value);
  }
  /**
   * <pre>
   * The set of label values that uniquely identify this timeseries. Applies to
   * all points. The order of label values must match that of label keys in the
   * metric descriptor.
   * </pre>
   *
   * <code>repeated .opencensus.proto.metrics.v1.LabelValue label_values = 2;</code>
   */
  private void addLabelValues(io.opencensus.proto.metrics.v1.LabelValue value) {
    value.getClass();
  ensureLabelValuesIsMutable();
    labelValues_.add(value);
  }
  /**
   * <pre>
   * The set of label values that uniquely identify this timeseries. Applies to
   * all points. The order of label values must match that of label keys in the
   * metric descriptor.
   * </pre>
   *
   * <code>repeated .opencensus.proto.metrics.v1.LabelValue label_values = 2;</code>
   */
  private void addLabelValues(
      int index, io.opencensus.proto.metrics.v1.LabelValue value) {
    value.getClass();
  ensureLabelValuesIsMutable();
    labelValues_.add(index, value);
  }
  /**
   * <pre>
   * The set of label values that uniquely identify this timeseries. Applies to
   * all points. The order of label values must match that of label keys in the
   * metric descriptor.
   * </pre>
   *
   * <code>repeated .opencensus.proto.metrics.v1.LabelValue label_values = 2;</code>
   */
  private void addAllLabelValues(
      java.lang.Iterable<? extends io.opencensus.proto.metrics.v1.LabelValue> values) {
    ensureLabelValuesIsMutable();
    com.google.protobuf.AbstractMessageLite.addAll(
        values, labelValues_);
  }
  /**
   * <pre>
   * The set of label values that uniquely identify this timeseries. Applies to
   * all points. The order of label values must match that of label keys in the
   * metric descriptor.
   * </pre>
   *
   * <code>repeated .opencensus.proto.metrics.v1.LabelValue label_values = 2;</code>
   */
  private void clearLabelValues() {
    labelValues_ = emptyProtobufList();
  }
  /**
   * <pre>
   * The set of label values that uniquely identify this timeseries. Applies to
   * all points. The order of label values must match that of label keys in the
   * metric descriptor.
   * </pre>
   *
   * <code>repeated .opencensus.proto.metrics.v1.LabelValue label_values = 2;</code>
   */
  private void removeLabelValues(int index) {
    ensureLabelValuesIsMutable();
    labelValues_.remove(index);
  }

  public static final int POINTS_FIELD_NUMBER = 3;
  private com.google.protobuf.Internal.ProtobufList<io.opencensus.proto.metrics.v1.Point> points_;
  /**
   * <pre>
   * The data points of this timeseries. Point.value type MUST match the
   * MetricDescriptor.type.
   * </pre>
   *
   * <code>repeated .opencensus.proto.metrics.v1.Point points = 3;</code>
   */
  @java.lang.Override
  public java.util.List<io.opencensus.proto.metrics.v1.Point> getPointsList() {
    return points_;
  }
  /**
   * <pre>
   * The data points of this timeseries. Point.value type MUST match the
   * MetricDescriptor.type.
   * </pre>
   *
   * <code>repeated .opencensus.proto.metrics.v1.Point points = 3;</code>
   */
  public java.util.List<? extends io.opencensus.proto.metrics.v1.PointOrBuilder> 
      getPointsOrBuilderList() {
    return points_;
  }
  /**
   * <pre>
   * The data points of this timeseries. Point.value type MUST match the
   * MetricDescriptor.type.
   * </pre>
   *
   * <code>repeated .opencensus.proto.metrics.v1.Point points = 3;</code>
   */
  @java.lang.Override
  public int getPointsCount() {
    return points_.size();
  }
  /**
   * <pre>
   * The data points of this timeseries. Point.value type MUST match the
   * MetricDescriptor.type.
   * </pre>
   *
   * <code>repeated .opencensus.proto.metrics.v1.Point points = 3;</code>
   */
  @java.lang.Override
  public io.opencensus.proto.metrics.v1.Point getPoints(int index) {
    return points_.get(index);
  }
  /**
   * <pre>
   * The data points of this timeseries. Point.value type MUST match the
   * MetricDescriptor.type.
   * </pre>
   *
   * <code>repeated .opencensus.proto.metrics.v1.Point points = 3;</code>
   */
  public io.opencensus.proto.metrics.v1.PointOrBuilder getPointsOrBuilder(
      int index) {
    return points_.get(index);
  }
  private void ensurePointsIsMutable() {
    com.google.protobuf.Internal.ProtobufList<io.opencensus.proto.metrics.v1.Point> tmp = points_;
    if (!tmp.isModifiable()) {
      points_ =
          com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
     }
  }

  /**
   * <pre>
   * The data points of this timeseries. Point.value type MUST match the
   * MetricDescriptor.type.
   * </pre>
   *
   * <code>repeated .opencensus.proto.metrics.v1.Point points = 3;</code>
   */
  private void setPoints(
      int index, io.opencensus.proto.metrics.v1.Point value) {
    value.getClass();
  ensurePointsIsMutable();
    points_.set(index, value);
  }
  /**
   * <pre>
   * The data points of this timeseries. Point.value type MUST match the
   * MetricDescriptor.type.
   * </pre>
   *
   * <code>repeated .opencensus.proto.metrics.v1.Point points = 3;</code>
   */
  private void addPoints(io.opencensus.proto.metrics.v1.Point value) {
    value.getClass();
  ensurePointsIsMutable();
    points_.add(value);
  }
  /**
   * <pre>
   * The data points of this timeseries. Point.value type MUST match the
   * MetricDescriptor.type.
   * </pre>
   *
   * <code>repeated .opencensus.proto.metrics.v1.Point points = 3;</code>
   */
  private void addPoints(
      int index, io.opencensus.proto.metrics.v1.Point value) {
    value.getClass();
  ensurePointsIsMutable();
    points_.add(index, value);
  }
  /**
   * <pre>
   * The data points of this timeseries. Point.value type MUST match the
   * MetricDescriptor.type.
   * </pre>
   *
   * <code>repeated .opencensus.proto.metrics.v1.Point points = 3;</code>
   */
  private void addAllPoints(
      java.lang.Iterable<? extends io.opencensus.proto.metrics.v1.Point> values) {
    ensurePointsIsMutable();
    com.google.protobuf.AbstractMessageLite.addAll(
        values, points_);
  }
  /**
   * <pre>
   * The data points of this timeseries. Point.value type MUST match the
   * MetricDescriptor.type.
   * </pre>
   *
   * <code>repeated .opencensus.proto.metrics.v1.Point points = 3;</code>
   */
  private void clearPoints() {
    points_ = emptyProtobufList();
  }
  /**
   * <pre>
   * The data points of this timeseries. Point.value type MUST match the
   * MetricDescriptor.type.
   * </pre>
   *
   * <code>repeated .opencensus.proto.metrics.v1.Point points = 3;</code>
   */
  private void removePoints(int index) {
    ensurePointsIsMutable();
    points_.remove(index);
  }

  public static io.opencensus.proto.metrics.v1.TimeSeries parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static io.opencensus.proto.metrics.v1.TimeSeries parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static io.opencensus.proto.metrics.v1.TimeSeries parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static io.opencensus.proto.metrics.v1.TimeSeries parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static io.opencensus.proto.metrics.v1.TimeSeries parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static io.opencensus.proto.metrics.v1.TimeSeries parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static io.opencensus.proto.metrics.v1.TimeSeries parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static io.opencensus.proto.metrics.v1.TimeSeries parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static io.opencensus.proto.metrics.v1.TimeSeries parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input);
  }
  public static io.opencensus.proto.metrics.v1.TimeSeries parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static io.opencensus.proto.metrics.v1.TimeSeries parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static io.opencensus.proto.metrics.v1.TimeSeries parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static Builder newBuilder() {
    return (Builder) DEFAULT_INSTANCE.createBuilder();
  }
  public static Builder newBuilder(io.opencensus.proto.metrics.v1.TimeSeries prototype) {
    return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
  }

  /**
   * <pre>
   * A collection of data points that describes the time-varying values
   * of a metric.
   * </pre>
   *
   * Protobuf type {@code opencensus.proto.metrics.v1.TimeSeries}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageLite.Builder<
        io.opencensus.proto.metrics.v1.TimeSeries, Builder> implements
      // @@protoc_insertion_point(builder_implements:opencensus.proto.metrics.v1.TimeSeries)
      io.opencensus.proto.metrics.v1.TimeSeriesOrBuilder {
    // Construct using io.opencensus.proto.metrics.v1.TimeSeries.newBuilder()
    private Builder() {
      super(DEFAULT_INSTANCE);
    }


    /**
     * <pre>
     * Must be present for cumulative metrics. The time when the cumulative value
     * was reset to zero. Exclusive. The cumulative value is over the time interval
     * (start_timestamp, timestamp]. If not specified, the backend can use the
     * previous recorded value.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp start_timestamp = 1;</code>
     */
    @java.lang.Override
    public boolean hasStartTimestamp() {
      return instance.hasStartTimestamp();
    }
    /**
     * <pre>
     * Must be present for cumulative metrics. The time when the cumulative value
     * was reset to zero. Exclusive. The cumulative value is over the time interval
     * (start_timestamp, timestamp]. If not specified, the backend can use the
     * previous recorded value.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp start_timestamp = 1;</code>
     */
    @java.lang.Override
    public com.google.protobuf.Timestamp getStartTimestamp() {
      return instance.getStartTimestamp();
    }
    /**
     * <pre>
     * Must be present for cumulative metrics. The time when the cumulative value
     * was reset to zero. Exclusive. The cumulative value is over the time interval
     * (start_timestamp, timestamp]. If not specified, the backend can use the
     * previous recorded value.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp start_timestamp = 1;</code>
     */
    public Builder setStartTimestamp(com.google.protobuf.Timestamp value) {
      copyOnWrite();
      instance.setStartTimestamp(value);
      return this;
      }
    /**
     * <pre>
     * Must be present for cumulative metrics. The time when the cumulative value
     * was reset to zero. Exclusive. The cumulative value is over the time interval
     * (start_timestamp, timestamp]. If not specified, the backend can use the
     * previous recorded value.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp start_timestamp = 1;</code>
     */
    public Builder setStartTimestamp(
        com.google.protobuf.Timestamp.Builder builderForValue) {
      copyOnWrite();
      instance.setStartTimestamp(builderForValue.build());
      return this;
    }
    /**
     * <pre>
     * Must be present for cumulative metrics. The time when the cumulative value
     * was reset to zero. Exclusive. The cumulative value is over the time interval
     * (start_timestamp, timestamp]. If not specified, the backend can use the
     * previous recorded value.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp start_timestamp = 1;</code>
     */
    public Builder mergeStartTimestamp(com.google.protobuf.Timestamp value) {
      copyOnWrite();
      instance.mergeStartTimestamp(value);
      return this;
    }
    /**
     * <pre>
     * Must be present for cumulative metrics. The time when the cumulative value
     * was reset to zero. Exclusive. The cumulative value is over the time interval
     * (start_timestamp, timestamp]. If not specified, the backend can use the
     * previous recorded value.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp start_timestamp = 1;</code>
     */
    public Builder clearStartTimestamp() {  copyOnWrite();
      instance.clearStartTimestamp();
      return this;
    }

    /**
     * <pre>
     * The set of label values that uniquely identify this timeseries. Applies to
     * all points. The order of label values must match that of label keys in the
     * metric descriptor.
     * </pre>
     *
     * <code>repeated .opencensus.proto.metrics.v1.LabelValue label_values = 2;</code>
     */
    @java.lang.Override
    public java.util.List<io.opencensus.proto.metrics.v1.LabelValue> getLabelValuesList() {
      return java.util.Collections.unmodifiableList(
          instance.getLabelValuesList());
    }
    /**
     * <pre>
     * The set of label values that uniquely identify this timeseries. Applies to
     * all points. The order of label values must match that of label keys in the
     * metric descriptor.
     * </pre>
     *
     * <code>repeated .opencensus.proto.metrics.v1.LabelValue label_values = 2;</code>
     */
    @java.lang.Override
    public int getLabelValuesCount() {
      return instance.getLabelValuesCount();
    }/**
     * <pre>
     * The set of label values that uniquely identify this timeseries. Applies to
     * all points. The order of label values must match that of label keys in the
     * metric descriptor.
     * </pre>
     *
     * <code>repeated .opencensus.proto.metrics.v1.LabelValue label_values = 2;</code>
     */
    @java.lang.Override
    public io.opencensus.proto.metrics.v1.LabelValue getLabelValues(int index) {
      return instance.getLabelValues(index);
    }
    /**
     * <pre>
     * The set of label values that uniquely identify this timeseries. Applies to
     * all points. The order of label values must match that of label keys in the
     * metric descriptor.
     * </pre>
     *
     * <code>repeated .opencensus.proto.metrics.v1.LabelValue label_values = 2;</code>
     */
    public Builder setLabelValues(
        int index, io.opencensus.proto.metrics.v1.LabelValue value) {
      copyOnWrite();
      instance.setLabelValues(index, value);
      return this;
    }
    /**
     * <pre>
     * The set of label values that uniquely identify this timeseries. Applies to
     * all points. The order of label values must match that of label keys in the
     * metric descriptor.
     * </pre>
     *
     * <code>repeated .opencensus.proto.metrics.v1.LabelValue label_values = 2;</code>
     */
    public Builder setLabelValues(
        int index, io.opencensus.proto.metrics.v1.LabelValue.Builder builderForValue) {
      copyOnWrite();
      instance.setLabelValues(index,
          builderForValue.build());
      return this;
    }
    /**
     * <pre>
     * The set of label values that uniquely identify this timeseries. Applies to
     * all points. The order of label values must match that of label keys in the
     * metric descriptor.
     * </pre>
     *
     * <code>repeated .opencensus.proto.metrics.v1.LabelValue label_values = 2;</code>
     */
    public Builder addLabelValues(io.opencensus.proto.metrics.v1.LabelValue value) {
      copyOnWrite();
      instance.addLabelValues(value);
      return this;
    }
    /**
     * <pre>
     * The set of label values that uniquely identify this timeseries. Applies to
     * all points. The order of label values must match that of label keys in the
     * metric descriptor.
     * </pre>
     *
     * <code>repeated .opencensus.proto.metrics.v1.LabelValue label_values = 2;</code>
     */
    public Builder addLabelValues(
        int index, io.opencensus.proto.metrics.v1.LabelValue value) {
      copyOnWrite();
      instance.addLabelValues(index, value);
      return this;
    }
    /**
     * <pre>
     * The set of label values that uniquely identify this timeseries. Applies to
     * all points. The order of label values must match that of label keys in the
     * metric descriptor.
     * </pre>
     *
     * <code>repeated .opencensus.proto.metrics.v1.LabelValue label_values = 2;</code>
     */
    public Builder addLabelValues(
        io.opencensus.proto.metrics.v1.LabelValue.Builder builderForValue) {
      copyOnWrite();
      instance.addLabelValues(builderForValue.build());
      return this;
    }
    /**
     * <pre>
     * The set of label values that uniquely identify this timeseries. Applies to
     * all points. The order of label values must match that of label keys in the
     * metric descriptor.
     * </pre>
     *
     * <code>repeated .opencensus.proto.metrics.v1.LabelValue label_values = 2;</code>
     */
    public Builder addLabelValues(
        int index, io.opencensus.proto.metrics.v1.LabelValue.Builder builderForValue) {
      copyOnWrite();
      instance.addLabelValues(index,
          builderForValue.build());
      return this;
    }
    /**
     * <pre>
     * The set of label values that uniquely identify this timeseries. Applies to
     * all points. The order of label values must match that of label keys in the
     * metric descriptor.
     * </pre>
     *
     * <code>repeated .opencensus.proto.metrics.v1.LabelValue label_values = 2;</code>
     */
    public Builder addAllLabelValues(
        java.lang.Iterable<? extends io.opencensus.proto.metrics.v1.LabelValue> values) {
      copyOnWrite();
      instance.addAllLabelValues(values);
      return this;
    }
    /**
     * <pre>
     * The set of label values that uniquely identify this timeseries. Applies to
     * all points. The order of label values must match that of label keys in the
     * metric descriptor.
     * </pre>
     *
     * <code>repeated .opencensus.proto.metrics.v1.LabelValue label_values = 2;</code>
     */
    public Builder clearLabelValues() {
      copyOnWrite();
      instance.clearLabelValues();
      return this;
    }
    /**
     * <pre>
     * The set of label values that uniquely identify this timeseries. Applies to
     * all points. The order of label values must match that of label keys in the
     * metric descriptor.
     * </pre>
     *
     * <code>repeated .opencensus.proto.metrics.v1.LabelValue label_values = 2;</code>
     */
    public Builder removeLabelValues(int index) {
      copyOnWrite();
      instance.removeLabelValues(index);
      return this;
    }

    /**
     * <pre>
     * The data points of this timeseries. Point.value type MUST match the
     * MetricDescriptor.type.
     * </pre>
     *
     * <code>repeated .opencensus.proto.metrics.v1.Point points = 3;</code>
     */
    @java.lang.Override
    public java.util.List<io.opencensus.proto.metrics.v1.Point> getPointsList() {
      return java.util.Collections.unmodifiableList(
          instance.getPointsList());
    }
    /**
     * <pre>
     * The data points of this timeseries. Point.value type MUST match the
     * MetricDescriptor.type.
     * </pre>
     *
     * <code>repeated .opencensus.proto.metrics.v1.Point points = 3;</code>
     */
    @java.lang.Override
    public int getPointsCount() {
      return instance.getPointsCount();
    }/**
     * <pre>
     * The data points of this timeseries. Point.value type MUST match the
     * MetricDescriptor.type.
     * </pre>
     *
     * <code>repeated .opencensus.proto.metrics.v1.Point points = 3;</code>
     */
    @java.lang.Override
    public io.opencensus.proto.metrics.v1.Point getPoints(int index) {
      return instance.getPoints(index);
    }
    /**
     * <pre>
     * The data points of this timeseries. Point.value type MUST match the
     * MetricDescriptor.type.
     * </pre>
     *
     * <code>repeated .opencensus.proto.metrics.v1.Point points = 3;</code>
     */
    public Builder setPoints(
        int index, io.opencensus.proto.metrics.v1.Point value) {
      copyOnWrite();
      instance.setPoints(index, value);
      return this;
    }
    /**
     * <pre>
     * The data points of this timeseries. Point.value type MUST match the
     * MetricDescriptor.type.
     * </pre>
     *
     * <code>repeated .opencensus.proto.metrics.v1.Point points = 3;</code>
     */
    public Builder setPoints(
        int index, io.opencensus.proto.metrics.v1.Point.Builder builderForValue) {
      copyOnWrite();
      instance.setPoints(index,
          builderForValue.build());
      return this;
    }
    /**
     * <pre>
     * The data points of this timeseries. Point.value type MUST match the
     * MetricDescriptor.type.
     * </pre>
     *
     * <code>repeated .opencensus.proto.metrics.v1.Point points = 3;</code>
     */
    public Builder addPoints(io.opencensus.proto.metrics.v1.Point value) {
      copyOnWrite();
      instance.addPoints(value);
      return this;
    }
    /**
     * <pre>
     * The data points of this timeseries. Point.value type MUST match the
     * MetricDescriptor.type.
     * </pre>
     *
     * <code>repeated .opencensus.proto.metrics.v1.Point points = 3;</code>
     */
    public Builder addPoints(
        int index, io.opencensus.proto.metrics.v1.Point value) {
      copyOnWrite();
      instance.addPoints(index, value);
      return this;
    }
    /**
     * <pre>
     * The data points of this timeseries. Point.value type MUST match the
     * MetricDescriptor.type.
     * </pre>
     *
     * <code>repeated .opencensus.proto.metrics.v1.Point points = 3;</code>
     */
    public Builder addPoints(
        io.opencensus.proto.metrics.v1.Point.Builder builderForValue) {
      copyOnWrite();
      instance.addPoints(builderForValue.build());
      return this;
    }
    /**
     * <pre>
     * The data points of this timeseries. Point.value type MUST match the
     * MetricDescriptor.type.
     * </pre>
     *
     * <code>repeated .opencensus.proto.metrics.v1.Point points = 3;</code>
     */
    public Builder addPoints(
        int index, io.opencensus.proto.metrics.v1.Point.Builder builderForValue) {
      copyOnWrite();
      instance.addPoints(index,
          builderForValue.build());
      return this;
    }
    /**
     * <pre>
     * The data points of this timeseries. Point.value type MUST match the
     * MetricDescriptor.type.
     * </pre>
     *
     * <code>repeated .opencensus.proto.metrics.v1.Point points = 3;</code>
     */
    public Builder addAllPoints(
        java.lang.Iterable<? extends io.opencensus.proto.metrics.v1.Point> values) {
      copyOnWrite();
      instance.addAllPoints(values);
      return this;
    }
    /**
     * <pre>
     * The data points of this timeseries. Point.value type MUST match the
     * MetricDescriptor.type.
     * </pre>
     *
     * <code>repeated .opencensus.proto.metrics.v1.Point points = 3;</code>
     */
    public Builder clearPoints() {
      copyOnWrite();
      instance.clearPoints();
      return this;
    }
    /**
     * <pre>
     * The data points of this timeseries. Point.value type MUST match the
     * MetricDescriptor.type.
     * </pre>
     *
     * <code>repeated .opencensus.proto.metrics.v1.Point points = 3;</code>
     */
    public Builder removePoints(int index) {
      copyOnWrite();
      instance.removePoints(index);
      return this;
    }

    // @@protoc_insertion_point(builder_scope:opencensus.proto.metrics.v1.TimeSeries)
  }
  @java.lang.Override
  @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
  protected final java.lang.Object dynamicMethod(
      com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
      java.lang.Object arg0, java.lang.Object arg1) {
    switch (method) {
      case NEW_MUTABLE_INSTANCE: {
        return new io.opencensus.proto.metrics.v1.TimeSeries();
      }
      case NEW_BUILDER: {
        return new Builder();
      }
      case BUILD_MESSAGE_INFO: {
          java.lang.Object[] objects = new java.lang.Object[] {
            "startTimestamp_",
            "labelValues_",
            io.opencensus.proto.metrics.v1.LabelValue.class,
            "points_",
            io.opencensus.proto.metrics.v1.Point.class,
          };
          java.lang.String info =
              "\u0000\u0003\u0000\u0000\u0001\u0003\u0003\u0000\u0002\u0000\u0001\t\u0002\u001b" +
              "\u0003\u001b";
          return newMessageInfo(DEFAULT_INSTANCE, info, objects);
      }
      // fall through
      case GET_DEFAULT_INSTANCE: {
        return DEFAULT_INSTANCE;
      }
      case GET_PARSER: {
        com.google.protobuf.Parser<io.opencensus.proto.metrics.v1.TimeSeries> parser = PARSER;
        if (parser == null) {
          synchronized (io.opencensus.proto.metrics.v1.TimeSeries.class) {
            parser = PARSER;
            if (parser == null) {
              parser =
                  new DefaultInstanceBasedParser<io.opencensus.proto.metrics.v1.TimeSeries>(
                      DEFAULT_INSTANCE);
              PARSER = parser;
            }
          }
        }
        return parser;
    }
    case GET_MEMOIZED_IS_INITIALIZED: {
      return (byte) 1;
    }
    case SET_MEMOIZED_IS_INITIALIZED: {
      return null;
    }
    }
    throw new UnsupportedOperationException();
  }


  // @@protoc_insertion_point(class_scope:opencensus.proto.metrics.v1.TimeSeries)
  private static final io.opencensus.proto.metrics.v1.TimeSeries DEFAULT_INSTANCE;
  static {
    TimeSeries defaultInstance = new TimeSeries();
    // New instances are implicitly immutable so no need to make
    // immutable.
    DEFAULT_INSTANCE = defaultInstance;
    com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
      TimeSeries.class, defaultInstance);
  }

  public static io.opencensus.proto.metrics.v1.TimeSeries getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static volatile com.google.protobuf.Parser<TimeSeries> PARSER;

  public static com.google.protobuf.Parser<TimeSeries> parser() {
    return DEFAULT_INSTANCE.getParserForType();
  }
}

