// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: opencensus/proto/metrics/v1/metrics.proto

package io.opencensus.proto.metrics.v1;

/**
 * <pre>
 * Defines a Metric which has one or more timeseries.
 * </pre>
 *
 * Protobuf type {@code opencensus.proto.metrics.v1.Metric}
 */
public  final class Metric extends
    com.google.protobuf.GeneratedMessageLite<
        Metric, Metric.Builder> implements
    // @@protoc_insertion_point(message_implements:opencensus.proto.metrics.v1.Metric)
    MetricOrBuilder {
  private Metric() {
    timeseries_ = emptyProtobufList();
  }
  public static final int METRIC_DESCRIPTOR_FIELD_NUMBER = 1;
  private io.opencensus.proto.metrics.v1.MetricDescriptor metricDescriptor_;
  /**
   * <pre>
   * The descriptor of the Metric.
   * TODO(issue #152): consider only sending the name of descriptor for
   * optimization.
   * </pre>
   *
   * <code>.opencensus.proto.metrics.v1.MetricDescriptor metric_descriptor = 1;</code>
   */
  @java.lang.Override
  public boolean hasMetricDescriptor() {
    return metricDescriptor_ != null;
  }
  /**
   * <pre>
   * The descriptor of the Metric.
   * TODO(issue #152): consider only sending the name of descriptor for
   * optimization.
   * </pre>
   *
   * <code>.opencensus.proto.metrics.v1.MetricDescriptor metric_descriptor = 1;</code>
   */
  @java.lang.Override
  public io.opencensus.proto.metrics.v1.MetricDescriptor getMetricDescriptor() {
    return metricDescriptor_ == null ? io.opencensus.proto.metrics.v1.MetricDescriptor.getDefaultInstance() : metricDescriptor_;
  }
  /**
   * <pre>
   * The descriptor of the Metric.
   * TODO(issue #152): consider only sending the name of descriptor for
   * optimization.
   * </pre>
   *
   * <code>.opencensus.proto.metrics.v1.MetricDescriptor metric_descriptor = 1;</code>
   */
  private void setMetricDescriptor(io.opencensus.proto.metrics.v1.MetricDescriptor value) {
    value.getClass();
  metricDescriptor_ = value;
    
    }
  /**
   * <pre>
   * The descriptor of the Metric.
   * TODO(issue #152): consider only sending the name of descriptor for
   * optimization.
   * </pre>
   *
   * <code>.opencensus.proto.metrics.v1.MetricDescriptor metric_descriptor = 1;</code>
   */
  @java.lang.SuppressWarnings({"ReferenceEquality"})
  private void mergeMetricDescriptor(io.opencensus.proto.metrics.v1.MetricDescriptor value) {
    value.getClass();
  if (metricDescriptor_ != null &&
        metricDescriptor_ != io.opencensus.proto.metrics.v1.MetricDescriptor.getDefaultInstance()) {
      metricDescriptor_ =
        io.opencensus.proto.metrics.v1.MetricDescriptor.newBuilder(metricDescriptor_).mergeFrom(value).buildPartial();
    } else {
      metricDescriptor_ = value;
    }
    
  }
  /**
   * <pre>
   * The descriptor of the Metric.
   * TODO(issue #152): consider only sending the name of descriptor for
   * optimization.
   * </pre>
   *
   * <code>.opencensus.proto.metrics.v1.MetricDescriptor metric_descriptor = 1;</code>
   */
  private void clearMetricDescriptor() {  metricDescriptor_ = null;
    
  }

  public static final int TIMESERIES_FIELD_NUMBER = 2;
  private com.google.protobuf.Internal.ProtobufList<io.opencensus.proto.metrics.v1.TimeSeries> timeseries_;
  /**
   * <pre>
   * One or more timeseries for a single metric, where each timeseries has
   * one or more points.
   * </pre>
   *
   * <code>repeated .opencensus.proto.metrics.v1.TimeSeries timeseries = 2;</code>
   */
  @java.lang.Override
  public java.util.List<io.opencensus.proto.metrics.v1.TimeSeries> getTimeseriesList() {
    return timeseries_;
  }
  /**
   * <pre>
   * One or more timeseries for a single metric, where each timeseries has
   * one or more points.
   * </pre>
   *
   * <code>repeated .opencensus.proto.metrics.v1.TimeSeries timeseries = 2;</code>
   */
  public java.util.List<? extends io.opencensus.proto.metrics.v1.TimeSeriesOrBuilder> 
      getTimeseriesOrBuilderList() {
    return timeseries_;
  }
  /**
   * <pre>
   * One or more timeseries for a single metric, where each timeseries has
   * one or more points.
   * </pre>
   *
   * <code>repeated .opencensus.proto.metrics.v1.TimeSeries timeseries = 2;</code>
   */
  @java.lang.Override
  public int getTimeseriesCount() {
    return timeseries_.size();
  }
  /**
   * <pre>
   * One or more timeseries for a single metric, where each timeseries has
   * one or more points.
   * </pre>
   *
   * <code>repeated .opencensus.proto.metrics.v1.TimeSeries timeseries = 2;</code>
   */
  @java.lang.Override
  public io.opencensus.proto.metrics.v1.TimeSeries getTimeseries(int index) {
    return timeseries_.get(index);
  }
  /**
   * <pre>
   * One or more timeseries for a single metric, where each timeseries has
   * one or more points.
   * </pre>
   *
   * <code>repeated .opencensus.proto.metrics.v1.TimeSeries timeseries = 2;</code>
   */
  public io.opencensus.proto.metrics.v1.TimeSeriesOrBuilder getTimeseriesOrBuilder(
      int index) {
    return timeseries_.get(index);
  }
  private void ensureTimeseriesIsMutable() {
    com.google.protobuf.Internal.ProtobufList<io.opencensus.proto.metrics.v1.TimeSeries> tmp = timeseries_;
    if (!tmp.isModifiable()) {
      timeseries_ =
          com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
     }
  }

  /**
   * <pre>
   * One or more timeseries for a single metric, where each timeseries has
   * one or more points.
   * </pre>
   *
   * <code>repeated .opencensus.proto.metrics.v1.TimeSeries timeseries = 2;</code>
   */
  private void setTimeseries(
      int index, io.opencensus.proto.metrics.v1.TimeSeries value) {
    value.getClass();
  ensureTimeseriesIsMutable();
    timeseries_.set(index, value);
  }
  /**
   * <pre>
   * One or more timeseries for a single metric, where each timeseries has
   * one or more points.
   * </pre>
   *
   * <code>repeated .opencensus.proto.metrics.v1.TimeSeries timeseries = 2;</code>
   */
  private void addTimeseries(io.opencensus.proto.metrics.v1.TimeSeries value) {
    value.getClass();
  ensureTimeseriesIsMutable();
    timeseries_.add(value);
  }
  /**
   * <pre>
   * One or more timeseries for a single metric, where each timeseries has
   * one or more points.
   * </pre>
   *
   * <code>repeated .opencensus.proto.metrics.v1.TimeSeries timeseries = 2;</code>
   */
  private void addTimeseries(
      int index, io.opencensus.proto.metrics.v1.TimeSeries value) {
    value.getClass();
  ensureTimeseriesIsMutable();
    timeseries_.add(index, value);
  }
  /**
   * <pre>
   * One or more timeseries for a single metric, where each timeseries has
   * one or more points.
   * </pre>
   *
   * <code>repeated .opencensus.proto.metrics.v1.TimeSeries timeseries = 2;</code>
   */
  private void addAllTimeseries(
      java.lang.Iterable<? extends io.opencensus.proto.metrics.v1.TimeSeries> values) {
    ensureTimeseriesIsMutable();
    com.google.protobuf.AbstractMessageLite.addAll(
        values, timeseries_);
  }
  /**
   * <pre>
   * One or more timeseries for a single metric, where each timeseries has
   * one or more points.
   * </pre>
   *
   * <code>repeated .opencensus.proto.metrics.v1.TimeSeries timeseries = 2;</code>
   */
  private void clearTimeseries() {
    timeseries_ = emptyProtobufList();
  }
  /**
   * <pre>
   * One or more timeseries for a single metric, where each timeseries has
   * one or more points.
   * </pre>
   *
   * <code>repeated .opencensus.proto.metrics.v1.TimeSeries timeseries = 2;</code>
   */
  private void removeTimeseries(int index) {
    ensureTimeseriesIsMutable();
    timeseries_.remove(index);
  }

  public static final int RESOURCE_FIELD_NUMBER = 3;
  private io.opencensus.proto.resource.v1.Resource resource_;
  /**
   * <pre>
   * The resource for the metric. If unset, it may be set to a default value
   * provided for a sequence of messages in an RPC stream.
   * </pre>
   *
   * <code>.opencensus.proto.resource.v1.Resource resource = 3;</code>
   */
  @java.lang.Override
  public boolean hasResource() {
    return resource_ != null;
  }
  /**
   * <pre>
   * The resource for the metric. If unset, it may be set to a default value
   * provided for a sequence of messages in an RPC stream.
   * </pre>
   *
   * <code>.opencensus.proto.resource.v1.Resource resource = 3;</code>
   */
  @java.lang.Override
  public io.opencensus.proto.resource.v1.Resource getResource() {
    return resource_ == null ? io.opencensus.proto.resource.v1.Resource.getDefaultInstance() : resource_;
  }
  /**
   * <pre>
   * The resource for the metric. If unset, it may be set to a default value
   * provided for a sequence of messages in an RPC stream.
   * </pre>
   *
   * <code>.opencensus.proto.resource.v1.Resource resource = 3;</code>
   */
  private void setResource(io.opencensus.proto.resource.v1.Resource value) {
    value.getClass();
  resource_ = value;
    
    }
  /**
   * <pre>
   * The resource for the metric. If unset, it may be set to a default value
   * provided for a sequence of messages in an RPC stream.
   * </pre>
   *
   * <code>.opencensus.proto.resource.v1.Resource resource = 3;</code>
   */
  @java.lang.SuppressWarnings({"ReferenceEquality"})
  private void mergeResource(io.opencensus.proto.resource.v1.Resource value) {
    value.getClass();
  if (resource_ != null &&
        resource_ != io.opencensus.proto.resource.v1.Resource.getDefaultInstance()) {
      resource_ =
        io.opencensus.proto.resource.v1.Resource.newBuilder(resource_).mergeFrom(value).buildPartial();
    } else {
      resource_ = value;
    }
    
  }
  /**
   * <pre>
   * The resource for the metric. If unset, it may be set to a default value
   * provided for a sequence of messages in an RPC stream.
   * </pre>
   *
   * <code>.opencensus.proto.resource.v1.Resource resource = 3;</code>
   */
  private void clearResource() {  resource_ = null;
    
  }

  public static io.opencensus.proto.metrics.v1.Metric parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static io.opencensus.proto.metrics.v1.Metric parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static io.opencensus.proto.metrics.v1.Metric parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static io.opencensus.proto.metrics.v1.Metric parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static io.opencensus.proto.metrics.v1.Metric parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static io.opencensus.proto.metrics.v1.Metric parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static io.opencensus.proto.metrics.v1.Metric parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static io.opencensus.proto.metrics.v1.Metric parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static io.opencensus.proto.metrics.v1.Metric parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input);
  }
  public static io.opencensus.proto.metrics.v1.Metric parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static io.opencensus.proto.metrics.v1.Metric parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static io.opencensus.proto.metrics.v1.Metric parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static Builder newBuilder() {
    return (Builder) DEFAULT_INSTANCE.createBuilder();
  }
  public static Builder newBuilder(io.opencensus.proto.metrics.v1.Metric prototype) {
    return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
  }

  /**
   * <pre>
   * Defines a Metric which has one or more timeseries.
   * </pre>
   *
   * Protobuf type {@code opencensus.proto.metrics.v1.Metric}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageLite.Builder<
        io.opencensus.proto.metrics.v1.Metric, Builder> implements
      // @@protoc_insertion_point(builder_implements:opencensus.proto.metrics.v1.Metric)
      io.opencensus.proto.metrics.v1.MetricOrBuilder {
    // Construct using io.opencensus.proto.metrics.v1.Metric.newBuilder()
    private Builder() {
      super(DEFAULT_INSTANCE);
    }


    /**
     * <pre>
     * The descriptor of the Metric.
     * TODO(issue #152): consider only sending the name of descriptor for
     * optimization.
     * </pre>
     *
     * <code>.opencensus.proto.metrics.v1.MetricDescriptor metric_descriptor = 1;</code>
     */
    @java.lang.Override
    public boolean hasMetricDescriptor() {
      return instance.hasMetricDescriptor();
    }
    /**
     * <pre>
     * The descriptor of the Metric.
     * TODO(issue #152): consider only sending the name of descriptor for
     * optimization.
     * </pre>
     *
     * <code>.opencensus.proto.metrics.v1.MetricDescriptor metric_descriptor = 1;</code>
     */
    @java.lang.Override
    public io.opencensus.proto.metrics.v1.MetricDescriptor getMetricDescriptor() {
      return instance.getMetricDescriptor();
    }
    /**
     * <pre>
     * The descriptor of the Metric.
     * TODO(issue #152): consider only sending the name of descriptor for
     * optimization.
     * </pre>
     *
     * <code>.opencensus.proto.metrics.v1.MetricDescriptor metric_descriptor = 1;</code>
     */
    public Builder setMetricDescriptor(io.opencensus.proto.metrics.v1.MetricDescriptor value) {
      copyOnWrite();
      instance.setMetricDescriptor(value);
      return this;
      }
    /**
     * <pre>
     * The descriptor of the Metric.
     * TODO(issue #152): consider only sending the name of descriptor for
     * optimization.
     * </pre>
     *
     * <code>.opencensus.proto.metrics.v1.MetricDescriptor metric_descriptor = 1;</code>
     */
    public Builder setMetricDescriptor(
        io.opencensus.proto.metrics.v1.MetricDescriptor.Builder builderForValue) {
      copyOnWrite();
      instance.setMetricDescriptor(builderForValue.build());
      return this;
    }
    /**
     * <pre>
     * The descriptor of the Metric.
     * TODO(issue #152): consider only sending the name of descriptor for
     * optimization.
     * </pre>
     *
     * <code>.opencensus.proto.metrics.v1.MetricDescriptor metric_descriptor = 1;</code>
     */
    public Builder mergeMetricDescriptor(io.opencensus.proto.metrics.v1.MetricDescriptor value) {
      copyOnWrite();
      instance.mergeMetricDescriptor(value);
      return this;
    }
    /**
     * <pre>
     * The descriptor of the Metric.
     * TODO(issue #152): consider only sending the name of descriptor for
     * optimization.
     * </pre>
     *
     * <code>.opencensus.proto.metrics.v1.MetricDescriptor metric_descriptor = 1;</code>
     */
    public Builder clearMetricDescriptor() {  copyOnWrite();
      instance.clearMetricDescriptor();
      return this;
    }

    /**
     * <pre>
     * One or more timeseries for a single metric, where each timeseries has
     * one or more points.
     * </pre>
     *
     * <code>repeated .opencensus.proto.metrics.v1.TimeSeries timeseries = 2;</code>
     */
    @java.lang.Override
    public java.util.List<io.opencensus.proto.metrics.v1.TimeSeries> getTimeseriesList() {
      return java.util.Collections.unmodifiableList(
          instance.getTimeseriesList());
    }
    /**
     * <pre>
     * One or more timeseries for a single metric, where each timeseries has
     * one or more points.
     * </pre>
     *
     * <code>repeated .opencensus.proto.metrics.v1.TimeSeries timeseries = 2;</code>
     */
    @java.lang.Override
    public int getTimeseriesCount() {
      return instance.getTimeseriesCount();
    }/**
     * <pre>
     * One or more timeseries for a single metric, where each timeseries has
     * one or more points.
     * </pre>
     *
     * <code>repeated .opencensus.proto.metrics.v1.TimeSeries timeseries = 2;</code>
     */
    @java.lang.Override
    public io.opencensus.proto.metrics.v1.TimeSeries getTimeseries(int index) {
      return instance.getTimeseries(index);
    }
    /**
     * <pre>
     * One or more timeseries for a single metric, where each timeseries has
     * one or more points.
     * </pre>
     *
     * <code>repeated .opencensus.proto.metrics.v1.TimeSeries timeseries = 2;</code>
     */
    public Builder setTimeseries(
        int index, io.opencensus.proto.metrics.v1.TimeSeries value) {
      copyOnWrite();
      instance.setTimeseries(index, value);
      return this;
    }
    /**
     * <pre>
     * One or more timeseries for a single metric, where each timeseries has
     * one or more points.
     * </pre>
     *
     * <code>repeated .opencensus.proto.metrics.v1.TimeSeries timeseries = 2;</code>
     */
    public Builder setTimeseries(
        int index, io.opencensus.proto.metrics.v1.TimeSeries.Builder builderForValue) {
      copyOnWrite();
      instance.setTimeseries(index,
          builderForValue.build());
      return this;
    }
    /**
     * <pre>
     * One or more timeseries for a single metric, where each timeseries has
     * one or more points.
     * </pre>
     *
     * <code>repeated .opencensus.proto.metrics.v1.TimeSeries timeseries = 2;</code>
     */
    public Builder addTimeseries(io.opencensus.proto.metrics.v1.TimeSeries value) {
      copyOnWrite();
      instance.addTimeseries(value);
      return this;
    }
    /**
     * <pre>
     * One or more timeseries for a single metric, where each timeseries has
     * one or more points.
     * </pre>
     *
     * <code>repeated .opencensus.proto.metrics.v1.TimeSeries timeseries = 2;</code>
     */
    public Builder addTimeseries(
        int index, io.opencensus.proto.metrics.v1.TimeSeries value) {
      copyOnWrite();
      instance.addTimeseries(index, value);
      return this;
    }
    /**
     * <pre>
     * One or more timeseries for a single metric, where each timeseries has
     * one or more points.
     * </pre>
     *
     * <code>repeated .opencensus.proto.metrics.v1.TimeSeries timeseries = 2;</code>
     */
    public Builder addTimeseries(
        io.opencensus.proto.metrics.v1.TimeSeries.Builder builderForValue) {
      copyOnWrite();
      instance.addTimeseries(builderForValue.build());
      return this;
    }
    /**
     * <pre>
     * One or more timeseries for a single metric, where each timeseries has
     * one or more points.
     * </pre>
     *
     * <code>repeated .opencensus.proto.metrics.v1.TimeSeries timeseries = 2;</code>
     */
    public Builder addTimeseries(
        int index, io.opencensus.proto.metrics.v1.TimeSeries.Builder builderForValue) {
      copyOnWrite();
      instance.addTimeseries(index,
          builderForValue.build());
      return this;
    }
    /**
     * <pre>
     * One or more timeseries for a single metric, where each timeseries has
     * one or more points.
     * </pre>
     *
     * <code>repeated .opencensus.proto.metrics.v1.TimeSeries timeseries = 2;</code>
     */
    public Builder addAllTimeseries(
        java.lang.Iterable<? extends io.opencensus.proto.metrics.v1.TimeSeries> values) {
      copyOnWrite();
      instance.addAllTimeseries(values);
      return this;
    }
    /**
     * <pre>
     * One or more timeseries for a single metric, where each timeseries has
     * one or more points.
     * </pre>
     *
     * <code>repeated .opencensus.proto.metrics.v1.TimeSeries timeseries = 2;</code>
     */
    public Builder clearTimeseries() {
      copyOnWrite();
      instance.clearTimeseries();
      return this;
    }
    /**
     * <pre>
     * One or more timeseries for a single metric, where each timeseries has
     * one or more points.
     * </pre>
     *
     * <code>repeated .opencensus.proto.metrics.v1.TimeSeries timeseries = 2;</code>
     */
    public Builder removeTimeseries(int index) {
      copyOnWrite();
      instance.removeTimeseries(index);
      return this;
    }

    /**
     * <pre>
     * The resource for the metric. If unset, it may be set to a default value
     * provided for a sequence of messages in an RPC stream.
     * </pre>
     *
     * <code>.opencensus.proto.resource.v1.Resource resource = 3;</code>
     */
    @java.lang.Override
    public boolean hasResource() {
      return instance.hasResource();
    }
    /**
     * <pre>
     * The resource for the metric. If unset, it may be set to a default value
     * provided for a sequence of messages in an RPC stream.
     * </pre>
     *
     * <code>.opencensus.proto.resource.v1.Resource resource = 3;</code>
     */
    @java.lang.Override
    public io.opencensus.proto.resource.v1.Resource getResource() {
      return instance.getResource();
    }
    /**
     * <pre>
     * The resource for the metric. If unset, it may be set to a default value
     * provided for a sequence of messages in an RPC stream.
     * </pre>
     *
     * <code>.opencensus.proto.resource.v1.Resource resource = 3;</code>
     */
    public Builder setResource(io.opencensus.proto.resource.v1.Resource value) {
      copyOnWrite();
      instance.setResource(value);
      return this;
      }
    /**
     * <pre>
     * The resource for the metric. If unset, it may be set to a default value
     * provided for a sequence of messages in an RPC stream.
     * </pre>
     *
     * <code>.opencensus.proto.resource.v1.Resource resource = 3;</code>
     */
    public Builder setResource(
        io.opencensus.proto.resource.v1.Resource.Builder builderForValue) {
      copyOnWrite();
      instance.setResource(builderForValue.build());
      return this;
    }
    /**
     * <pre>
     * The resource for the metric. If unset, it may be set to a default value
     * provided for a sequence of messages in an RPC stream.
     * </pre>
     *
     * <code>.opencensus.proto.resource.v1.Resource resource = 3;</code>
     */
    public Builder mergeResource(io.opencensus.proto.resource.v1.Resource value) {
      copyOnWrite();
      instance.mergeResource(value);
      return this;
    }
    /**
     * <pre>
     * The resource for the metric. If unset, it may be set to a default value
     * provided for a sequence of messages in an RPC stream.
     * </pre>
     *
     * <code>.opencensus.proto.resource.v1.Resource resource = 3;</code>
     */
    public Builder clearResource() {  copyOnWrite();
      instance.clearResource();
      return this;
    }

    // @@protoc_insertion_point(builder_scope:opencensus.proto.metrics.v1.Metric)
  }
  @java.lang.Override
  @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
  protected final java.lang.Object dynamicMethod(
      com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
      java.lang.Object arg0, java.lang.Object arg1) {
    switch (method) {
      case NEW_MUTABLE_INSTANCE: {
        return new io.opencensus.proto.metrics.v1.Metric();
      }
      case NEW_BUILDER: {
        return new Builder();
      }
      case BUILD_MESSAGE_INFO: {
          java.lang.Object[] objects = new java.lang.Object[] {
            "metricDescriptor_",
            "timeseries_",
            io.opencensus.proto.metrics.v1.TimeSeries.class,
            "resource_",
          };
          java.lang.String info =
              "\u0000\u0003\u0000\u0000\u0001\u0003\u0003\u0000\u0001\u0000\u0001\t\u0002\u001b" +
              "\u0003\t";
          return newMessageInfo(DEFAULT_INSTANCE, info, objects);
      }
      // fall through
      case GET_DEFAULT_INSTANCE: {
        return DEFAULT_INSTANCE;
      }
      case GET_PARSER: {
        com.google.protobuf.Parser<io.opencensus.proto.metrics.v1.Metric> parser = PARSER;
        if (parser == null) {
          synchronized (io.opencensus.proto.metrics.v1.Metric.class) {
            parser = PARSER;
            if (parser == null) {
              parser =
                  new DefaultInstanceBasedParser<io.opencensus.proto.metrics.v1.Metric>(
                      DEFAULT_INSTANCE);
              PARSER = parser;
            }
          }
        }
        return parser;
    }
    case GET_MEMOIZED_IS_INITIALIZED: {
      return (byte) 1;
    }
    case SET_MEMOIZED_IS_INITIALIZED: {
      return null;
    }
    }
    throw new UnsupportedOperationException();
  }


  // @@protoc_insertion_point(class_scope:opencensus.proto.metrics.v1.Metric)
  private static final io.opencensus.proto.metrics.v1.Metric DEFAULT_INSTANCE;
  static {
    Metric defaultInstance = new Metric();
    // New instances are implicitly immutable so no need to make
    // immutable.
    DEFAULT_INSTANCE = defaultInstance;
    com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
      Metric.class, defaultInstance);
  }

  public static io.opencensus.proto.metrics.v1.Metric getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static volatile com.google.protobuf.Parser<Metric> PARSER;

  public static com.google.protobuf.Parser<Metric> parser() {
    return DEFAULT_INSTANCE.getParserForType();
  }
}

