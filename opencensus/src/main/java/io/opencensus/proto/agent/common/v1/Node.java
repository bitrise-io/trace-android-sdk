// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: opencensus/proto/agent/common/v1/common.proto

package io.opencensus.proto.agent.common.v1;

/**
 * <pre>
 * Identifier metadata of the Node that produces the span or tracing data.
 * Note, this is not the metadata about the Node or service that is described by associated spans.
 * In the future we plan to extend the identifier proto definition to support
 * additional information (e.g cloud id, etc.)
 * </pre>
 *
 * Protobuf type {@code opencensus.proto.agent.common.v1.Node}
 */
public  final class Node extends
    com.google.protobuf.GeneratedMessageLite<
        Node, Node.Builder> implements
    // @@protoc_insertion_point(message_implements:opencensus.proto.agent.common.v1.Node)
    NodeOrBuilder {
  private Node() {
  }
  public static final int IDENTIFIER_FIELD_NUMBER = 1;
  private io.opencensus.proto.agent.common.v1.ProcessIdentifier identifier_;
  /**
   * <pre>
   * Identifier that uniquely identifies a process within a VM/container.
   * </pre>
   *
   * <code>.opencensus.proto.agent.common.v1.ProcessIdentifier identifier = 1;</code>
   */
  @java.lang.Override
  public boolean hasIdentifier() {
    return identifier_ != null;
  }
  /**
   * <pre>
   * Identifier that uniquely identifies a process within a VM/container.
   * </pre>
   *
   * <code>.opencensus.proto.agent.common.v1.ProcessIdentifier identifier = 1;</code>
   */
  @java.lang.Override
  public io.opencensus.proto.agent.common.v1.ProcessIdentifier getIdentifier() {
    return identifier_ == null ? io.opencensus.proto.agent.common.v1.ProcessIdentifier.getDefaultInstance() : identifier_;
  }
  /**
   * <pre>
   * Identifier that uniquely identifies a process within a VM/container.
   * </pre>
   *
   * <code>.opencensus.proto.agent.common.v1.ProcessIdentifier identifier = 1;</code>
   */
  private void setIdentifier(io.opencensus.proto.agent.common.v1.ProcessIdentifier value) {
    value.getClass();
  identifier_ = value;
    
    }
  /**
   * <pre>
   * Identifier that uniquely identifies a process within a VM/container.
   * </pre>
   *
   * <code>.opencensus.proto.agent.common.v1.ProcessIdentifier identifier = 1;</code>
   */
  @java.lang.SuppressWarnings({"ReferenceEquality"})
  private void mergeIdentifier(io.opencensus.proto.agent.common.v1.ProcessIdentifier value) {
    value.getClass();
  if (identifier_ != null &&
        identifier_ != io.opencensus.proto.agent.common.v1.ProcessIdentifier.getDefaultInstance()) {
      identifier_ =
        io.opencensus.proto.agent.common.v1.ProcessIdentifier.newBuilder(identifier_).mergeFrom(value).buildPartial();
    } else {
      identifier_ = value;
    }
    
  }
  /**
   * <pre>
   * Identifier that uniquely identifies a process within a VM/container.
   * </pre>
   *
   * <code>.opencensus.proto.agent.common.v1.ProcessIdentifier identifier = 1;</code>
   */
  private void clearIdentifier() {  identifier_ = null;
    
  }

  public static final int LIBRARY_INFO_FIELD_NUMBER = 2;
  private io.opencensus.proto.agent.common.v1.LibraryInfo libraryInfo_;
  /**
   * <pre>
   * Information on the OpenCensus Library that initiates the stream.
   * </pre>
   *
   * <code>.opencensus.proto.agent.common.v1.LibraryInfo library_info = 2;</code>
   */
  @java.lang.Override
  public boolean hasLibraryInfo() {
    return libraryInfo_ != null;
  }
  /**
   * <pre>
   * Information on the OpenCensus Library that initiates the stream.
   * </pre>
   *
   * <code>.opencensus.proto.agent.common.v1.LibraryInfo library_info = 2;</code>
   */
  @java.lang.Override
  public io.opencensus.proto.agent.common.v1.LibraryInfo getLibraryInfo() {
    return libraryInfo_ == null ? io.opencensus.proto.agent.common.v1.LibraryInfo.getDefaultInstance() : libraryInfo_;
  }
  /**
   * <pre>
   * Information on the OpenCensus Library that initiates the stream.
   * </pre>
   *
   * <code>.opencensus.proto.agent.common.v1.LibraryInfo library_info = 2;</code>
   */
  private void setLibraryInfo(io.opencensus.proto.agent.common.v1.LibraryInfo value) {
    value.getClass();
  libraryInfo_ = value;
    
    }
  /**
   * <pre>
   * Information on the OpenCensus Library that initiates the stream.
   * </pre>
   *
   * <code>.opencensus.proto.agent.common.v1.LibraryInfo library_info = 2;</code>
   */
  @java.lang.SuppressWarnings({"ReferenceEquality"})
  private void mergeLibraryInfo(io.opencensus.proto.agent.common.v1.LibraryInfo value) {
    value.getClass();
  if (libraryInfo_ != null &&
        libraryInfo_ != io.opencensus.proto.agent.common.v1.LibraryInfo.getDefaultInstance()) {
      libraryInfo_ =
        io.opencensus.proto.agent.common.v1.LibraryInfo.newBuilder(libraryInfo_).mergeFrom(value).buildPartial();
    } else {
      libraryInfo_ = value;
    }
    
  }
  /**
   * <pre>
   * Information on the OpenCensus Library that initiates the stream.
   * </pre>
   *
   * <code>.opencensus.proto.agent.common.v1.LibraryInfo library_info = 2;</code>
   */
  private void clearLibraryInfo() {  libraryInfo_ = null;
    
  }

  public static final int SERVICE_INFO_FIELD_NUMBER = 3;
  private io.opencensus.proto.agent.common.v1.ServiceInfo serviceInfo_;
  /**
   * <pre>
   * Additional information on service.
   * </pre>
   *
   * <code>.opencensus.proto.agent.common.v1.ServiceInfo service_info = 3;</code>
   */
  @java.lang.Override
  public boolean hasServiceInfo() {
    return serviceInfo_ != null;
  }
  /**
   * <pre>
   * Additional information on service.
   * </pre>
   *
   * <code>.opencensus.proto.agent.common.v1.ServiceInfo service_info = 3;</code>
   */
  @java.lang.Override
  public io.opencensus.proto.agent.common.v1.ServiceInfo getServiceInfo() {
    return serviceInfo_ == null ? io.opencensus.proto.agent.common.v1.ServiceInfo.getDefaultInstance() : serviceInfo_;
  }
  /**
   * <pre>
   * Additional information on service.
   * </pre>
   *
   * <code>.opencensus.proto.agent.common.v1.ServiceInfo service_info = 3;</code>
   */
  private void setServiceInfo(io.opencensus.proto.agent.common.v1.ServiceInfo value) {
    value.getClass();
  serviceInfo_ = value;
    
    }
  /**
   * <pre>
   * Additional information on service.
   * </pre>
   *
   * <code>.opencensus.proto.agent.common.v1.ServiceInfo service_info = 3;</code>
   */
  @java.lang.SuppressWarnings({"ReferenceEquality"})
  private void mergeServiceInfo(io.opencensus.proto.agent.common.v1.ServiceInfo value) {
    value.getClass();
  if (serviceInfo_ != null &&
        serviceInfo_ != io.opencensus.proto.agent.common.v1.ServiceInfo.getDefaultInstance()) {
      serviceInfo_ =
        io.opencensus.proto.agent.common.v1.ServiceInfo.newBuilder(serviceInfo_).mergeFrom(value).buildPartial();
    } else {
      serviceInfo_ = value;
    }
    
  }
  /**
   * <pre>
   * Additional information on service.
   * </pre>
   *
   * <code>.opencensus.proto.agent.common.v1.ServiceInfo service_info = 3;</code>
   */
  private void clearServiceInfo() {  serviceInfo_ = null;
    
  }

  public static final int ATTRIBUTES_FIELD_NUMBER = 4;
  private static final class AttributesDefaultEntryHolder {
    static final com.google.protobuf.MapEntryLite<
        java.lang.String, java.lang.String> defaultEntry =
            com.google.protobuf.MapEntryLite
            .<java.lang.String, java.lang.String>newDefaultInstance(
                com.google.protobuf.WireFormat.FieldType.STRING,
                "",
                com.google.protobuf.WireFormat.FieldType.STRING,
                "");
  }
  private com.google.protobuf.MapFieldLite<
      java.lang.String, java.lang.String> attributes_ =
          com.google.protobuf.MapFieldLite.emptyMapField();
  private com.google.protobuf.MapFieldLite<java.lang.String, java.lang.String>
  internalGetAttributes() {
    return attributes_;
  }
  private com.google.protobuf.MapFieldLite<java.lang.String, java.lang.String>
  internalGetMutableAttributes() {
    if (!attributes_.isMutable()) {
      attributes_ = attributes_.mutableCopy();
    }
    return attributes_;
  }
  @java.lang.Override

  public int getAttributesCount() {
    return internalGetAttributes().size();
  }
  /**
   * <pre>
   * Additional attributes.
   * </pre>
   *
   * <code>map&lt;string, string&gt; attributes = 4;</code>
   */
  @java.lang.Override

  public boolean containsAttributes(
      java.lang.String key) {
    key.getClass();
    return internalGetAttributes().containsKey(key);
  }
  /**
   * Use {@link #getAttributesMap()} instead.
   */
  @java.lang.Override
  @java.lang.Deprecated
  public java.util.Map<java.lang.String, java.lang.String> getAttributes() {
    return getAttributesMap();
  }
  /**
   * <pre>
   * Additional attributes.
   * </pre>
   *
   * <code>map&lt;string, string&gt; attributes = 4;</code>
   */
  @java.lang.Override

  public java.util.Map<java.lang.String, java.lang.String> getAttributesMap() {
    return java.util.Collections.unmodifiableMap(
        internalGetAttributes());
  }
  /**
   * <pre>
   * Additional attributes.
   * </pre>
   *
   * <code>map&lt;string, string&gt; attributes = 4;</code>
   */
  @java.lang.Override

  public java.lang.String getAttributesOrDefault(
      java.lang.String key,
      java.lang.String defaultValue) {
    key.getClass();
    java.util.Map<java.lang.String, java.lang.String> map =
        internalGetAttributes();
    return map.containsKey(key) ? map.get(key) : defaultValue;
  }
  /**
   * <pre>
   * Additional attributes.
   * </pre>
   *
   * <code>map&lt;string, string&gt; attributes = 4;</code>
   */
  @java.lang.Override

  public java.lang.String getAttributesOrThrow(
      java.lang.String key) {
    key.getClass();
    java.util.Map<java.lang.String, java.lang.String> map =
        internalGetAttributes();
    if (!map.containsKey(key)) {
      throw new java.lang.IllegalArgumentException();
    }
    return map.get(key);
  }
  /**
   * <pre>
   * Additional attributes.
   * </pre>
   *
   * <code>map&lt;string, string&gt; attributes = 4;</code>
   */
  private java.util.Map<java.lang.String, java.lang.String>
  getMutableAttributesMap() {
    return internalGetMutableAttributes();
  }

  public static io.opencensus.proto.agent.common.v1.Node parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static io.opencensus.proto.agent.common.v1.Node parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static io.opencensus.proto.agent.common.v1.Node parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static io.opencensus.proto.agent.common.v1.Node parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static io.opencensus.proto.agent.common.v1.Node parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static io.opencensus.proto.agent.common.v1.Node parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static io.opencensus.proto.agent.common.v1.Node parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static io.opencensus.proto.agent.common.v1.Node parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static io.opencensus.proto.agent.common.v1.Node parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input);
  }
  public static io.opencensus.proto.agent.common.v1.Node parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static io.opencensus.proto.agent.common.v1.Node parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static io.opencensus.proto.agent.common.v1.Node parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static Builder newBuilder() {
    return (Builder) DEFAULT_INSTANCE.createBuilder();
  }
  public static Builder newBuilder(io.opencensus.proto.agent.common.v1.Node prototype) {
    return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
  }

  /**
   * <pre>
   * Identifier metadata of the Node that produces the span or tracing data.
   * Note, this is not the metadata about the Node or service that is described by associated spans.
   * In the future we plan to extend the identifier proto definition to support
   * additional information (e.g cloud id, etc.)
   * </pre>
   *
   * Protobuf type {@code opencensus.proto.agent.common.v1.Node}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageLite.Builder<
        io.opencensus.proto.agent.common.v1.Node, Builder> implements
      // @@protoc_insertion_point(builder_implements:opencensus.proto.agent.common.v1.Node)
      io.opencensus.proto.agent.common.v1.NodeOrBuilder {
    // Construct using io.opencensus.proto.agent.common.v1.Node.newBuilder()
    private Builder() {
      super(DEFAULT_INSTANCE);
    }


    /**
     * <pre>
     * Identifier that uniquely identifies a process within a VM/container.
     * </pre>
     *
     * <code>.opencensus.proto.agent.common.v1.ProcessIdentifier identifier = 1;</code>
     */
    @java.lang.Override
    public boolean hasIdentifier() {
      return instance.hasIdentifier();
    }
    /**
     * <pre>
     * Identifier that uniquely identifies a process within a VM/container.
     * </pre>
     *
     * <code>.opencensus.proto.agent.common.v1.ProcessIdentifier identifier = 1;</code>
     */
    @java.lang.Override
    public io.opencensus.proto.agent.common.v1.ProcessIdentifier getIdentifier() {
      return instance.getIdentifier();
    }
    /**
     * <pre>
     * Identifier that uniquely identifies a process within a VM/container.
     * </pre>
     *
     * <code>.opencensus.proto.agent.common.v1.ProcessIdentifier identifier = 1;</code>
     */
    public Builder setIdentifier(io.opencensus.proto.agent.common.v1.ProcessIdentifier value) {
      copyOnWrite();
      instance.setIdentifier(value);
      return this;
      }
    /**
     * <pre>
     * Identifier that uniquely identifies a process within a VM/container.
     * </pre>
     *
     * <code>.opencensus.proto.agent.common.v1.ProcessIdentifier identifier = 1;</code>
     */
    public Builder setIdentifier(
        io.opencensus.proto.agent.common.v1.ProcessIdentifier.Builder builderForValue) {
      copyOnWrite();
      instance.setIdentifier(builderForValue.build());
      return this;
    }
    /**
     * <pre>
     * Identifier that uniquely identifies a process within a VM/container.
     * </pre>
     *
     * <code>.opencensus.proto.agent.common.v1.ProcessIdentifier identifier = 1;</code>
     */
    public Builder mergeIdentifier(io.opencensus.proto.agent.common.v1.ProcessIdentifier value) {
      copyOnWrite();
      instance.mergeIdentifier(value);
      return this;
    }
    /**
     * <pre>
     * Identifier that uniquely identifies a process within a VM/container.
     * </pre>
     *
     * <code>.opencensus.proto.agent.common.v1.ProcessIdentifier identifier = 1;</code>
     */
    public Builder clearIdentifier() {  copyOnWrite();
      instance.clearIdentifier();
      return this;
    }

    /**
     * <pre>
     * Information on the OpenCensus Library that initiates the stream.
     * </pre>
     *
     * <code>.opencensus.proto.agent.common.v1.LibraryInfo library_info = 2;</code>
     */
    @java.lang.Override
    public boolean hasLibraryInfo() {
      return instance.hasLibraryInfo();
    }
    /**
     * <pre>
     * Information on the OpenCensus Library that initiates the stream.
     * </pre>
     *
     * <code>.opencensus.proto.agent.common.v1.LibraryInfo library_info = 2;</code>
     */
    @java.lang.Override
    public io.opencensus.proto.agent.common.v1.LibraryInfo getLibraryInfo() {
      return instance.getLibraryInfo();
    }
    /**
     * <pre>
     * Information on the OpenCensus Library that initiates the stream.
     * </pre>
     *
     * <code>.opencensus.proto.agent.common.v1.LibraryInfo library_info = 2;</code>
     */
    public Builder setLibraryInfo(io.opencensus.proto.agent.common.v1.LibraryInfo value) {
      copyOnWrite();
      instance.setLibraryInfo(value);
      return this;
      }
    /**
     * <pre>
     * Information on the OpenCensus Library that initiates the stream.
     * </pre>
     *
     * <code>.opencensus.proto.agent.common.v1.LibraryInfo library_info = 2;</code>
     */
    public Builder setLibraryInfo(
        io.opencensus.proto.agent.common.v1.LibraryInfo.Builder builderForValue) {
      copyOnWrite();
      instance.setLibraryInfo(builderForValue.build());
      return this;
    }
    /**
     * <pre>
     * Information on the OpenCensus Library that initiates the stream.
     * </pre>
     *
     * <code>.opencensus.proto.agent.common.v1.LibraryInfo library_info = 2;</code>
     */
    public Builder mergeLibraryInfo(io.opencensus.proto.agent.common.v1.LibraryInfo value) {
      copyOnWrite();
      instance.mergeLibraryInfo(value);
      return this;
    }
    /**
     * <pre>
     * Information on the OpenCensus Library that initiates the stream.
     * </pre>
     *
     * <code>.opencensus.proto.agent.common.v1.LibraryInfo library_info = 2;</code>
     */
    public Builder clearLibraryInfo() {  copyOnWrite();
      instance.clearLibraryInfo();
      return this;
    }

    /**
     * <pre>
     * Additional information on service.
     * </pre>
     *
     * <code>.opencensus.proto.agent.common.v1.ServiceInfo service_info = 3;</code>
     */
    @java.lang.Override
    public boolean hasServiceInfo() {
      return instance.hasServiceInfo();
    }
    /**
     * <pre>
     * Additional information on service.
     * </pre>
     *
     * <code>.opencensus.proto.agent.common.v1.ServiceInfo service_info = 3;</code>
     */
    @java.lang.Override
    public io.opencensus.proto.agent.common.v1.ServiceInfo getServiceInfo() {
      return instance.getServiceInfo();
    }
    /**
     * <pre>
     * Additional information on service.
     * </pre>
     *
     * <code>.opencensus.proto.agent.common.v1.ServiceInfo service_info = 3;</code>
     */
    public Builder setServiceInfo(io.opencensus.proto.agent.common.v1.ServiceInfo value) {
      copyOnWrite();
      instance.setServiceInfo(value);
      return this;
      }
    /**
     * <pre>
     * Additional information on service.
     * </pre>
     *
     * <code>.opencensus.proto.agent.common.v1.ServiceInfo service_info = 3;</code>
     */
    public Builder setServiceInfo(
        io.opencensus.proto.agent.common.v1.ServiceInfo.Builder builderForValue) {
      copyOnWrite();
      instance.setServiceInfo(builderForValue.build());
      return this;
    }
    /**
     * <pre>
     * Additional information on service.
     * </pre>
     *
     * <code>.opencensus.proto.agent.common.v1.ServiceInfo service_info = 3;</code>
     */
    public Builder mergeServiceInfo(io.opencensus.proto.agent.common.v1.ServiceInfo value) {
      copyOnWrite();
      instance.mergeServiceInfo(value);
      return this;
    }
    /**
     * <pre>
     * Additional information on service.
     * </pre>
     *
     * <code>.opencensus.proto.agent.common.v1.ServiceInfo service_info = 3;</code>
     */
    public Builder clearServiceInfo() {  copyOnWrite();
      instance.clearServiceInfo();
      return this;
    }

    @java.lang.Override

    public int getAttributesCount() {
      return instance.getAttributesMap().size();
    }
    /**
     * <pre>
     * Additional attributes.
     * </pre>
     *
     * <code>map&lt;string, string&gt; attributes = 4;</code>
     */
    @java.lang.Override

    public boolean containsAttributes(
        java.lang.String key) {
      key.getClass();
      return instance.getAttributesMap().containsKey(key);
    }

    public Builder clearAttributes() {
      copyOnWrite();
      instance.getMutableAttributesMap().clear();
      return this;
    }
    /**
     * <pre>
     * Additional attributes.
     * </pre>
     *
     * <code>map&lt;string, string&gt; attributes = 4;</code>
     */

    public Builder removeAttributes(
        java.lang.String key) {
      key.getClass();
      copyOnWrite();
      instance.getMutableAttributesMap().remove(key);
      return this;
    }
    /**
     * Use {@link #getAttributesMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.String> getAttributes() {
      return getAttributesMap();
    }
    /**
     * <pre>
     * Additional attributes.
     * </pre>
     *
     * <code>map&lt;string, string&gt; attributes = 4;</code>
     */
    @java.lang.Override
    public java.util.Map<java.lang.String, java.lang.String> getAttributesMap() {
      return java.util.Collections.unmodifiableMap(
          instance.getAttributesMap());
    }
    /**
     * <pre>
     * Additional attributes.
     * </pre>
     *
     * <code>map&lt;string, string&gt; attributes = 4;</code>
     */
    @java.lang.Override

    public java.lang.String getAttributesOrDefault(
        java.lang.String key,
        java.lang.String defaultValue) {
      key.getClass();
      java.util.Map<java.lang.String, java.lang.String> map =
          instance.getAttributesMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     * Additional attributes.
     * </pre>
     *
     * <code>map&lt;string, string&gt; attributes = 4;</code>
     */
    @java.lang.Override

    public java.lang.String getAttributesOrThrow(
        java.lang.String key) {
      key.getClass();
      java.util.Map<java.lang.String, java.lang.String> map =
          instance.getAttributesMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }
    /**
     * <pre>
     * Additional attributes.
     * </pre>
     *
     * <code>map&lt;string, string&gt; attributes = 4;</code>
     */
    public Builder putAttributes(
        java.lang.String key,
        java.lang.String value) {
      key.getClass();
      value.getClass();
      copyOnWrite();
      instance.getMutableAttributesMap().put(key, value);
      return this;
    }
    /**
     * <pre>
     * Additional attributes.
     * </pre>
     *
     * <code>map&lt;string, string&gt; attributes = 4;</code>
     */
    public Builder putAllAttributes(
        java.util.Map<java.lang.String, java.lang.String> values) {
      copyOnWrite();
      instance.getMutableAttributesMap().putAll(values);
      return this;
    }

    // @@protoc_insertion_point(builder_scope:opencensus.proto.agent.common.v1.Node)
  }
  @java.lang.Override
  @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
  protected final java.lang.Object dynamicMethod(
      com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
      java.lang.Object arg0, java.lang.Object arg1) {
    switch (method) {
      case NEW_MUTABLE_INSTANCE: {
        return new io.opencensus.proto.agent.common.v1.Node();
      }
      case NEW_BUILDER: {
        return new Builder();
      }
      case BUILD_MESSAGE_INFO: {
          java.lang.Object[] objects = new java.lang.Object[] {
            "identifier_",
            "libraryInfo_",
            "serviceInfo_",
            "attributes_",
            AttributesDefaultEntryHolder.defaultEntry,
          };
          java.lang.String info =
              "\u0000\u0004\u0000\u0000\u0001\u0004\u0004\u0001\u0000\u0000\u0001\t\u0002\t\u0003" +
              "\t\u00042";
          return newMessageInfo(DEFAULT_INSTANCE, info, objects);
      }
      // fall through
      case GET_DEFAULT_INSTANCE: {
        return DEFAULT_INSTANCE;
      }
      case GET_PARSER: {
        com.google.protobuf.Parser<io.opencensus.proto.agent.common.v1.Node> parser = PARSER;
        if (parser == null) {
          synchronized (io.opencensus.proto.agent.common.v1.Node.class) {
            parser = PARSER;
            if (parser == null) {
              parser =
                  new DefaultInstanceBasedParser<io.opencensus.proto.agent.common.v1.Node>(
                      DEFAULT_INSTANCE);
              PARSER = parser;
            }
          }
        }
        return parser;
    }
    case GET_MEMOIZED_IS_INITIALIZED: {
      return (byte) 1;
    }
    case SET_MEMOIZED_IS_INITIALIZED: {
      return null;
    }
    }
    throw new UnsupportedOperationException();
  }


  // @@protoc_insertion_point(class_scope:opencensus.proto.agent.common.v1.Node)
  private static final io.opencensus.proto.agent.common.v1.Node DEFAULT_INSTANCE;
  static {
    Node defaultInstance = new Node();
    // New instances are implicitly immutable so no need to make
    // immutable.
    DEFAULT_INSTANCE = defaultInstance;
    com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
      Node.class, defaultInstance);
  }

  public static io.opencensus.proto.agent.common.v1.Node getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static volatile com.google.protobuf.Parser<Node> PARSER;

  public static com.google.protobuf.Parser<Node> parser() {
    return DEFAULT_INSTANCE.getParserForType();
  }
}

